Unfold
======

.. py:currentmodule:: textform

.. py:class:: Unfold(source, inputs, outputs)

    The ``Unfold`` transform unfolds (pivots) a set of columns.
    Simple unfolding consists of rotating a single input columns into multiple output columns.
    This can be generalised to multiple input columns where the output columns
    are broken up into equal-sized groups, each of which is generated from one of the input columns.
    ``Unfold`` is the inverse of :py:class:`Fold`.

    .. py:attribute:: source
        :type: Transform

        The input pipeline.

    .. py:attribute:: inputs
        :type: tuple(str)

        The list of columns to be unfolded.
        They will be dropped from the output, so use :py:class:`Copy` to preserve them.
        Each input column contains the values for an entire output group.

    .. py:attribute:: outputs
        :type: tuple(str)

        The output columns receiving the unfolded columns.
        The output columns are broken into equal-sized groups, one per input column.
        The number of *inputs* must be an even multiple of the number of *outputs*.
        They cannot overwrite existing columns, so use :py:class:`Drop` to remove unwanted columns.

Limitations
^^^^^^^^^^^
The current implementation assumes that the unfolded values are contiguous.
That is, all the input rows for a single output row will arrive sequentially and in order.
This is the order generated by :py:class:`Fold`, so it is suggested that for now ``Unfold``
only be used to undo the actions of :py:class:`Fold`.

Usage
^^^^^

.. code-block:: python

   Unfold(p, ('Year', 'Sales',), ('Sales 1992', 'Sales 1993', 'Sales 1994',))
   Unfold(p, ('Year', 'Sales', 'Profit',), ('Sales 1992', 'Sales 1993', 'Sales 1994', 'Profit 1992', 'Profit 1993', 'Profit 1994',))
